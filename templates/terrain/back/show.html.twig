{% extends 'Back/base.html.twig' %}

{% block title %}Détails du Terrain - Administration{% endblock %}


{% block body %}
    <div class="dashboard-container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Détails du Terrain</h1>
            <p class="dashboard-subtitle">Informations complètes sur le terrain</p>
        </div>

        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Terrain #{{ terrain.idTerrain }}</h2>
            </div>
            <div class="card-body">
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="detail-label">Nom</div>
                        <div class="detail-value">{{ terrain.Nom }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Type de surface</div>
                        <div class="detail-value">{{ terrain.TypeSurface }}</div>
                    </div>
                    <div class="detail-item full-width">
                        <div class="detail-label">Localisation</div>
                        <div class="detail-value">{{ terrain.Localisation }}</div>
                        <div id="map" style="height: 400px; border-radius: 8px; margin-top: 15px;"></div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Prix</div>
                        <div class="detail-value">{{ terrain.Prix }}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Image</div>
                        <div class="detail-value">
                            <img src="{{ asset('uploads/terrains/' ~ terrain.imageTer ?: 'placeholder.jpg') }}" alt="Image du terrain" style="max-width: 100%; height: auto; border-radius: 10px;">
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <a href="{{ path('app_terrain_indexback') }}" class="btn btn-back">
                    <i class="fas fa-arrow-left"></i> Retour à la liste
                </a>
                <a href="{{ path('app_terrain_edit', {'idTerrain': terrain.idTerrain}) }}" class="btn btn-edit">
                    <i class="fas fa-edit"></i> Modifier
                </a>
            </div>
        </div>
    </div>

    {{ include('terrain/back/_delete_form.html.twig') }}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>
    <style>
        .dashboard-container {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .dashboard-header {
            margin-bottom: 2rem;
            text-align: center;
            position: relative;
        }

        .dashboard-title {
            color: #2c3e50;
            font-size: 2.2rem;
            margin-bottom: 0.5rem;
        }

        .dashboard-subtitle {
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .card-header {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 1.5rem 2rem;
            position: relative;
        }

        .card-title {
            font-size: 1.5rem;
            margin: 0;
            display: flex;
            align-items: center;
        }

        .card-title:before {
            content: '\f07b';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            margin-right: 1rem;
            font-size: 1.8rem;
        }

        .card-body {
            padding: 2rem;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
        }

        .detail-item {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 1.5rem;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .detail-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .detail-label {
            color: #7f8c8d;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 0.5rem;
        }

        .detail-value {
            color: #2c3e50;
            font-size: 1.1rem;
            font-weight: 500;
        }

        .badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
        }

        .badge:before {
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            margin-right: 0.5rem;
        }

        .badge-success {
            background: #dff6dd;
            color: #1e7e34;
        }

        .badge-success:before {
            content: '\f00c';
        }

        .badge-warning {
            background: #fff3cd;
            color: #856404;
        }

        .badge-warning:before {
            content: '\f071';
        }

        .badge-danger {
            background: #f8d7da;
            color: #721c24;
        }

        .badge-danger:before {
            content: '\f057';
        }

        .full-width {
            grid-column: 1 / -1;
        }

        .card-footer {
            background: #f8f9fa;
            padding: 1.5rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            text-decoration: none;
            transition: all 0.2s;
        }

        .btn i {
            margin-right: 0.5rem;
        }

        .btn-back {
            background: #e9ecef;
            color: #495057;
        }

        .btn-back:hover {
            background: #dee2e6;
            transform: translateY(-2px);
        }

        .btn-edit {
            background: #3498db;
            color: white;
        }

        .btn-edit:hover {
            background: #2980b9;
            transform: translateY(-2px);
        }

        .btn-delete {
            background: #e74c3c;
            color: white;
        }

        .btn-delete:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }

        .actions-group {
            display: flex;
            gap: 1rem;
        }

        /* Map styles */
        #map {
            width: 100%;
            height: 400px;
            border-radius: 8px;
            border: 1px solid #dee2e6;
            position: relative;
            z-index: 1;
            margin-top: 15px;
        }
    </style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    // Direct inline script to initialize the map
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Admin detail page map script running');

        setTimeout(function() {
            try {
                const mapElement = document.getElementById('map');
                if (!mapElement) {
                    console.error('Map element not found');
                    return;
                }

                if (typeof L === 'undefined') {
                    console.error('Leaflet not loaded');
                    // Try to load Leaflet dynamically
                    const script = document.createElement('script');
                    script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
                    script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';
                    script.crossOrigin = '';
                    script.onload = initMap;
                    document.head.appendChild(script);
                    return;
                }

                initMap();

                function initMap() {
                    console.log('Initializing admin detail page map...');

                    // Get coordinates from the terrain.localisation value
                    const localisationText = "{{ terrain.Localisation }}";
                    if (!localisationText) {
                        console.error('No localisation data available');
                        return;
                    }

                    const [lat, lng] = localisationText.split(',');
                    if (!lat || !lng || isNaN(parseFloat(lat)) || isNaN(parseFloat(lng))) {
                        console.error('Invalid localisation format:', localisationText);
                        return;
                    }

                    const latNum = parseFloat(lat);
                    const lngNum = parseFloat(lng);

                    // Create a map instance
                    const map = L.map(mapElement, {
                        center: [latNum, lngNum],
                        zoom: 15
                    });

                    // Add the tile layer
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '© OpenStreetMap contributors'
                    }).addTo(map);

                    // Add scale control
                    L.control.scale().addTo(map);

                    // Add a marker at the terrain location
                    L.marker([latNum, lngNum]).addTo(map)
                        .bindPopup("<strong>{{ terrain.Nom }}</strong><br>{{ terrain.TypeSurface }}<br>{{ terrain.Prix }} TND")
                        .openPopup();

                    // Force a map resize after a short delay
                    setTimeout(function() {
                        map.invalidateSize();
                    }, 100);
                }
            } catch (error) {
                console.error('Error initializing map:', error);
            }
        }, 500); // Delay initialization to ensure DOM is fully loaded
    });
</script>
{% endblock %}